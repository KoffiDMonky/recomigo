#!/usr/bin/env node

/**
 * Test de la nouvelle version raccourcie "Reco de"
 */

function testRecoDeLength() {
  console.log('üöÄ Test de la nouvelle version "Reco de"\n');

  // Simuler diff√©rents cas avec le nouveau format
  const testCases = [
    { name: 'Adrien', expected: 'OK' },
    { name: 'Marie', expected: 'OK' },
    { name: 'Jean-Pierre', expected: 'OK' },
    { name: 'Jean-Pierre-Marie-Claude', expected: 'Limit√©' },
    { name: 'Tr√®sLongNomDeFamilleAvecBeaucoupDeCaract√®res', expected: 'Limit√©' },
    { name: 'Dr. Jean-Pierre-Marie-Claude de la Fontaine', expected: 'Limit√©' },
    { name: 'A', expected: 'OK' },
    { name: 'Jean', expected: 'OK' },
    { name: 'Jean-Pierre-Marie', expected: 'OK' },
    { name: 'Jean-Pierre-Marie-Claude-Henri', expected: 'Limit√©' }
  ];

  console.log('üìã Test avec "Reco de":');
  testCases.forEach((testCase, index) => {
    const fullText = `Reco de ${testCase.name}`;
    const isLong = fullText.length > 25; // Limite r√©duite pour le format raccourci
    const status = isLong ? '‚ö†Ô∏è' : '‚úÖ';
    
    console.log(`   ${index + 1}. "${testCase.name}"`);
    console.log(`      Texte complet: "${fullText}"`);
    console.log(`      Longueur: ${fullText.length} caract√®res`);
    console.log(`      Status: ${status} ${isLong ? 'Limit√©' : 'OK'}`);
    console.log('');
  });

  // Comparaison avec l'ancien format
  console.log('üìä Comparaison des formats:');
  const comparisonCases = [
    'Adrien',
    'Jean-Pierre-Marie-Claude',
    'Dr. Jean-Pierre-Marie-Claude de la Fontaine'
  ];

  comparisonCases.forEach((name, index) => {
    const oldFormat = `Recommand√© par ${name}`;
    const newFormat = `Reco de ${name}`;
    const oldLength = oldFormat.length;
    const newLength = newFormat.length;
    const saved = oldLength - newLength;
    
    console.log(`   ${index + 1}. "${name}":`);
    console.log(`      Ancien: "${oldFormat}" (${oldLength} caract√®res)`);
    console.log(`      Nouveau: "${newFormat}" (${newLength} caract√®res)`);
    console.log(`      √âconomie: ${saved} caract√®res (${Math.round(saved/oldLength*100)}%)`);
    console.log('');
  });

  // Test de simulation d'interface avec le nouveau format
  console.log('üñ•Ô∏è Simulation d\'interface avec "Reco de":');
  const mockItems = [
    { title: 'The Matrix', recommendedBy: 'Adrien' },
    { title: 'Inception', recommendedBy: 'Jean-Pierre-Marie-Claude de la Fontaine' },
    { title: 'Interstellar', recommendedBy: 'Marie' },
    { title: 'Breaking Bad', recommendedBy: 'Dr. Jean-Pierre-Marie-Claude-Henri de la Fontaine et Cie' },
    { title: 'Game of Thrones', recommendedBy: 'Jean' }
  ];

  mockItems.forEach((item, index) => {
    const fullText = `Reco de ${item.recommendedBy}`;
    const isLong = fullText.length > 25;
    const displayText = isLong ? `${fullText.substring(0, 22)}...` : fullText;
    
    console.log(`   ${index + 1}. ${item.title}:`);
    console.log(`      - Reco de: "${item.recommendedBy}"`);
    console.log(`      - Longueur: ${fullText.length} caract√®res`);
    console.log(`      - Affichage: "${displayText}"`);
    console.log(`      - Status: ${isLong ? '‚ö†Ô∏è Limit√©' : '‚úÖ OK'}`);
    console.log('');
  });
}

// Test de validation des avantages
function testAdvantages() {
  console.log('‚úÖ Avantages du nouveau format "Reco de":\n');
  
  console.log('üìè Espace √©conomis√©:');
  console.log('   - "Recommand√© par" = 15 caract√®res');
  console.log('   - "Reco de" = 8 caract√®res');
  console.log('   - √âconomie = 7 caract√®res (47%)');
  
  console.log('\nüéØ Avantages:');
  console.log('   - Plus d\'espace pour les noms longs');
  console.log('   - Interface plus compacte');
  console.log('   - Bouton "D√©couvrir" mieux pr√©serv√©');
  console.log('   - Lecture plus rapide');
  console.log('   - Moins de troncature n√©cessaire');
  
  console.log('\nüì± Impact sur l\'interface:');
  console.log('   - Noms courts: Affichage complet garanti');
  console.log('   - Noms moyens: Plus d\'espace disponible');
  console.log('   - Noms longs: Troncature r√©duite');
  console.log('   - Bouton: Toujours visible et accessible');
}

// Ex√©cution
function runTests() {
  console.log('üöÄ Test de la nouvelle version "Reco de"\n');
  
  testRecoDeLength();
  testAdvantages();
  
  console.log('\n‚úÖ Tests termin√©s !');
  console.log('\nüìã R√©sum√© des am√©liorations:');
  console.log('   - Format raccourci: "Reco de" au lieu de "Recommand√© par"');
  console.log('   - √âconomie de 7 caract√®res (47%)');
  console.log('   - Plus d\'espace pour les noms');
  console.log('   - Interface plus compacte');
  console.log('   - Meilleure pr√©servation du bouton');
  console.log('   - Lecture plus fluide');
}

if (require.main === module) {
  runTests();
} 