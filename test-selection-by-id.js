#!/usr/bin/env node

/**
 * Test de la s√©lection par ID TMDB
 */

// Simulation de l'environnement React Native avec axios
const axios = require('axios');
global.axios = axios;

// Import du service
const MovieService = require('./services/MovieService.js');

async function testSelectionById() {
  console.log('üîç Test de la s√©lection par ID TMDB...\n');

  try {
    // Test avec "Jeux d'enfants" - r√©cup√©rer les suggestions
    console.log('üé¨ Recherche des suggestions pour "Jeux d\'enfants"...');
    const suggestions = await MovieService.searchMovieSuggestions('Jeux d\'enfants');
    
    if (suggestions && suggestions.length > 0) {
      console.log(`‚úÖ ${suggestions.length} suggestions trouv√©es\n`);
      
      // Test avec les 3 premiers r√©sultats
      for (let i = 0; i < Math.min(3, suggestions.length); i++) {
        const suggestion = suggestions[i];
        console.log(`üîç Test ${i + 1}: "${suggestion.title}" (ID: ${suggestion.id}, Type: ${suggestion.mediaType})`);
        console.log(`   R√©alisateur dans suggestion: ${suggestion.director || 'N/A'}`);
        
        // R√©cup√©rer les d√©tails par ID
        const movieData = await MovieService.getMovieById(suggestion.id, suggestion.mediaType);
        
        if (movieData) {
          console.log(`‚úÖ D√©tails r√©cup√©r√©s:`);
          console.log(`   - Titre: ${movieData.title}`);
          console.log(`   - Ann√©e: ${movieData.year}`);
          console.log(`   - Type: ${movieData.type}`);
          console.log(`   - R√©alisateur: ${movieData.director || 'N/A'}`);
          console.log(`   - Genre: ${movieData.genre || 'N/A'}`);
          console.log(`   - Note: ${movieData.rating || 'N/A'}`);
          
          // V√©rifier la coh√©rence
          if (movieData.director === suggestion.director) {
            console.log(`‚úÖ Coh√©rence OK: R√©alisateur identique`);
          } else {
            console.log(`‚ö†Ô∏è Diff√©rence de r√©alisateur:`);
            console.log(`   Suggestion: ${suggestion.director || 'N/A'}`);
            console.log(`   D√©tails: ${movieData.director || 'N/A'}`);
          }
        } else {
          console.log(`‚ùå Impossible de r√©cup√©rer les d√©tails`);
        }
        
        console.log(''); // Ligne vide
      }
    } else {
      console.log('‚ùå Aucune suggestion trouv√©e');
    }
    
  } catch (error) {
    console.log(`‚ùå Erreur: ${error.message}`);
  }
}

// Test sp√©cifique pour "Jeux d'enfants" de Yann Samuell
async function testJeuxDenfantsYannSamuell() {
  console.log('üéØ Test sp√©cifique pour "Jeux d\'enfants" de Yann Samuell...\n');
  
  try {
    const suggestions = await MovieService.searchMovieSuggestions('Jeux d\'enfants');
    
    // Chercher celui de Yann Samuell
    const yannSamuell = suggestions.find(s => s.director === 'Yann Samuell');
    
    if (yannSamuell) {
      console.log(`‚úÖ Trouv√©: "${yannSamuell.title}" (${yannSamuell.year})`);
      console.log(`   ID: ${yannSamuell.id}, Type: ${yannSamuell.mediaType}`);
      console.log(`   R√©alisateur: ${yannSamuell.director}`);
      
      // R√©cup√©rer les d√©tails par ID
      const movieData = await MovieService.getMovieById(yannSamuell.id, yannSamuell.mediaType);
      
      if (movieData) {
        console.log(`\n‚úÖ D√©tails r√©cup√©r√©s par ID:`);
        console.log(`   - Titre: ${movieData.title}`);
        console.log(`   - Ann√©e: ${movieData.year}`);
        console.log(`   - R√©alisateur: ${movieData.director}`);
        console.log(`   - Genre: ${movieData.genre}`);
        console.log(`   - Description: ${movieData.description ? movieData.description.substring(0, 100) + '...' : 'N/A'}`);
        
        if (movieData.director === 'Yann Samuell') {
          console.log(`\nüéâ SUCC√àS: Les bonnes informations sont r√©cup√©r√©es !`);
        } else {
          console.log(`\n‚ùå ERREUR: Mauvais r√©alisateur r√©cup√©r√©`);
        }
      } else {
        console.log(`‚ùå Impossible de r√©cup√©rer les d√©tails`);
      }
    } else {
      console.log('‚ùå Film de Yann Samuell non trouv√© dans les suggestions');
    }
    
  } catch (error) {
    console.log(`‚ùå Erreur: ${error.message}`);
  }
}

// Ex√©cution
async function runTests() {
  console.log('üöÄ Test de la s√©lection par ID TMDB\n');
  
  await testSelectionById();
  await testJeuxDenfantsYannSamuell();
  
  console.log('\n‚úÖ Tests termin√©s !');
}

if (require.main === module) {
  runTests();
} 