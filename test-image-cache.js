#!/usr/bin/env node

/**
 * Test du cache d'images
 */

// Simulation de l'environnement React Native avec axios
const axios = require('axios');
global.axios = axios;

// Import du service
const MovieService = require('./services/MovieService.js');

async function testImageCache() {
  console.log('üñºÔ∏è Test du cache d\'images...\n');

  try {
    // Test avec "Jeux d'enfants"
    console.log('üé¨ Recherche des suggestions pour "Jeux d\'enfants"...');
    const suggestions = await MovieService.searchMovieSuggestions('Jeux d\'enfants');
    
    if (suggestions && suggestions.length > 0) {
      console.log(`‚úÖ ${suggestions.length} suggestions trouv√©es\n`);
      
      // Test avec le premier r√©sultat
      const firstSuggestion = suggestions[0];
      console.log(`üîç Test avec: "${firstSuggestion.title}" (${firstSuggestion.year})`);
      console.log(`   Image: ${firstSuggestion.image ? '‚úÖ' : '‚ùå'}`);
      console.log(`   R√©alisateur: ${firstSuggestion.director || 'N/A'}`);
      
      // R√©cup√©rer les d√©tails complets
      const movieData = await MovieService.getMovieById(firstSuggestion.id, firstSuggestion.mediaType);
      
      if (movieData) {
        console.log(`\n‚úÖ D√©tails r√©cup√©r√©s:`);
        console.log(`   - Titre: ${movieData.title}`);
        console.log(`   - Ann√©e: ${movieData.year}`);
        console.log(`   - Image: ${movieData.image ? '‚úÖ' : '‚ùå'}`);
        console.log(`   - R√©alisateur: ${movieData.director || 'N/A'}`);
        console.log(`   - Genre: ${movieData.genre || 'N/A'}`);
        
        if (movieData.image) {
          console.log(`   - URL image: ${movieData.image.substring(0, 50)}...`);
        }
      } else {
        console.log('‚ùå Impossible de r√©cup√©rer les d√©tails');
      }
      
    } else {
      console.log('‚ùå Aucune suggestion trouv√©e');
    }
    
  } catch (error) {
    console.log(`‚ùå Erreur: ${error.message}`);
  }
}

// Test avec plusieurs films pour v√©rifier le cache
async function testMultipleImages() {
  console.log('\nüîÑ Test avec plusieurs films...\n');

  const testTitles = ['The Matrix', 'Inception', 'Interstellar'];
  
  for (const title of testTitles) {
    console.log(`üé¨ Test: "${title}"`);
    
    try {
      const suggestions = await MovieService.searchMovieSuggestions(title);
      
      if (suggestions && suggestions.length > 0) {
        const firstSuggestion = suggestions[0];
        console.log(`   - Image disponible: ${firstSuggestion.image ? '‚úÖ' : '‚ùå'}`);
        
        // R√©cup√©rer les d√©tails
        const movieData = await MovieService.getMovieById(firstSuggestion.id, firstSuggestion.mediaType);
        
        if (movieData) {
          console.log(`   - Image dans d√©tails: ${movieData.image ? '‚úÖ' : '‚ùå'}`);
        }
      }
    } catch (error) {
      console.log(`   - Erreur: ${error.message}`);
    }
    
    console.log(''); // Ligne vide
  }
}

// Test de performance du cache
async function testCachePerformance() {
  console.log('\n‚ö° Test de performance du cache...\n');

  try {
    const startTime = Date.now();
    
    // Premi√®re recherche (devrait t√©l√©charger)
    console.log('üì• Premi√®re recherche (t√©l√©chargement)...');
    const suggestions1 = await MovieService.searchMovieSuggestions('The Matrix');
    
    const firstTime = Date.now() - startTime;
    console.log(`   Temps: ${firstTime}ms`);
    
    // Deuxi√®me recherche (devrait utiliser le cache)
    console.log('üì¶ Deuxi√®me recherche (cache)...');
    const startTime2 = Date.now();
    const suggestions2 = await MovieService.searchMovieSuggestions('The Matrix');
    
    const secondTime = Date.now() - startTime2;
    console.log(`   Temps: ${secondTime}ms`);
    
    if (secondTime < firstTime) {
      console.log(`‚úÖ Cache fonctionne: ${secondTime}ms < ${firstTime}ms`);
    } else {
      console.log(`‚ö†Ô∏è Cache peut-√™tre lent: ${secondTime}ms >= ${firstTime}ms`);
    }
    
  } catch (error) {
    console.log(`‚ùå Erreur performance: ${error.message}`);
  }
}

// Ex√©cution
async function runTests() {
  console.log('üöÄ Test du cache d\'images\n');
  
  await testImageCache();
  await testMultipleImages();
  await testCachePerformance();
  
  console.log('\n‚úÖ Tests termin√©s !');
}

if (require.main === module) {
  runTests();
} 